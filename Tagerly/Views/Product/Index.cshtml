@model IEnumerable<ProductViewModel>

@{
    ViewData["Title"] = "Products";
    var filterModel = ViewBag.FilterModel as ProductFilterViewModel ?? new ProductFilterViewModel();
    var totalPages = ViewBag.TotalPages as int? ?? 1;
}

<style>
    :root {
        --wood-dark: #5E3023;
        --wood-medium: #895737;
        --wood-light: #B88B4A;
        --cream: #E3DCCB;
        --beige: #D8C4A7;
        --light-bg: #F5F1EB;
        --black-text: #000000; /* Define a black color variable */
    }

    body {
        background-color: var(--light-bg);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .card {
        border: 1px solid var(--wood-light);
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        overflow: hidden;
    }

    .card-header {
        background-color: var(--wood-dark);
        color: white;
        padding: 1rem 1.25rem; /* Decreased padding */
        border-bottom: 1px solid var(--wood-light);
    }

    .table-responsive {
        border-radius: 8px;
        overflow: hidden;
        border: 1px solid var(--wood-light);
    }

    .table {
        margin-bottom: 1rem; /* Added margin below the table */
        background-color: white;
        border-collapse: collapse; /* Ensure borders are collapsed properly */
    }

        .table th {
            background-color: var(--wood-dark);
            color: white;
            font-weight: 600;
            padding: 0.6rem 0.8rem; /* Decreased padding for table headers */
            border-bottom: 2px solid var(--wood-light);
            text-transform: uppercase;
            font-size: 0.8rem;
            letter-spacing: 0.5px;
            text-align: center;
            border-right: 1px solid var(--wood-light); /* Add right border to table headers */
        }

            .table th:last-child {
                border-right: none; /* Remove right border for the last header */
            }


        .table td {
            padding: 0.6rem 0.8rem; /* Decreased padding for table cells */
            vertical-align: middle;
            border-top: 1px solid var(--wood-light);
            text-align: center;
            border-right: 1px solid var(--wood-light); /* Add right border to table cells */
        }

            .table td:last-child {
                border-right: none; /* Remove right border for the last cell in a row */
            }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: var(--beige);
    }

    .table tbody tr:hover {
        background-color: #f0e6d6;
    }

    .table img {
        width: 50px; /* Decreased image size */
        height: 50px; /* Decreased image size */
        object-fit: cover;
        border-radius: 4px;
        border: 1px solid var(--wood-light);
        padding: 1px; /* Decreased padding */
    }

    .btn-group .btn {
        padding: 0.3rem 0.6rem; /* Decreased button padding */
        font-size: 0.8rem; /* Decreased button font size */
        margin: 0 1px; /* Reduced margin between buttons */
    }

    .btn-primary {
        background-color: var(--wood-dark);
        border-color: var(--wood-dark);
    }

        .btn-primary:hover {
            background-color: var(--wood-medium);
            border-color: var(--wood-medium);
        }

    .btn-secondary {
        background-color: var(--wood-medium);
        border-color: var(--wood-medium);
        color: white;
    }

        .btn-secondary:hover {
            background-color: var(--wood-dark);
            border-color: var(--wood-dark);
            color: white;
        }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
    }

        .btn-danger:hover {
            background-color: #c82333;
            border-color: #bd2130;
        }

    .search-container {
        margin-bottom: 1rem; /* Decreased margin */
    }

    .search-row {
        display: flex;
        flex-wrap: wrap;
        gap: 0.8rem; /* Decreased gap */
        align-items: flex-end; /* Align items to the bottom for consistent height */
    }

    .search-box {
        flex-grow: 1; /* Allow search box to grow */
        min-width: 250px; /* Adjusted min-width */
    }

    .filter-controls {
        display: flex;
        flex-wrap: wrap;
        gap: 0.8rem; /* Decreased gap */
        align-items: flex-end; /* Align items to the bottom for consistent height */
    }

    .filter-group {
        min-width: 150px; /* Keep a minimum width */
        margin-top: 0.375rem; /* roughly half of default form control padding */
    }

    .form-check {
        padding-left: 1.5em; /* Standard Bootstrap checkbox padding */
        min-height: calc(1.5em + 0.75rem + 2px); /* Match height of form controls */
        display: flex; /* Use flexbox for internal alignment */
        align-items: center; /* Vertically align checkbox and label */
        margin-bottom: 0; /* Remove default bottom margin */
    }

    .form-check-input {
        margin-left: -1.5em; /* Standard Bootstrap checkbox positioning */
        margin-top: 0; /* Ensure no extra top margin */
        margin-right: 0.5em; /* Added space to the right of the checkbox */
    }

    .form-check-label {
        margin-bottom: 0; /* Remove default bottom margin */
    }


    .pagination .page-item .page-link {
        color: var(--wood-dark);
        border: 1px solid var(--wood-light);
        padding: 0.4rem 0.6rem; /* Decreased pagination link padding */
        font-size: 0.9rem; /* Adjusted pagination link font size */
    }

    .pagination .page-item.active .page-link {
        background-color: var(--wood-dark);
        border-color: var(--wood-dark);
        color: white;
    }

    .pagination .page-item.disabled .page-link {
        color: #6c757d;
    }

    .status-badge {
        display: inline-block;
        padding: 0.25em 0.5em; /* Decreased padding */
        font-size: 0.7em; /* Decreased font size */
        font-weight: 700;
        line-height: 1;
        text-align: center;
        white-space: nowrap;
        vertical-align: baseline;
        border-radius: 0.25rem;
    }

    .badge-in-stock {
        color: #fff;
        background-color: #28a745;
    }

    .badge-out-of-stock {
        color: #fff;
        background-color: #dc3545;
    }

    .action-buttons {
        min-width: 160px; /* Adjusted min-width */
    }

    .form-control, .form-select {
        border: 1px solid var(--wood-light);
        padding: 0.375rem 0.75rem; /* Bootstrap default padding for standard height */
        font-size: 1rem; /* Bootstrap default font size for standard height */
        height: calc(1.5em + 0.75rem + 2px); /* Explicitly set height to match standard form control height */
        box-sizing: border-box; /* Include padding and border in element's total width and height */
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--wood-medium);
            box-shadow: 0 0 0 0.25rem rgba(94, 48, 35, 0.25);
        }

    .btn {
        height: calc(1.5em + 0.75rem + 2px); /* Explicitly set height to match standard form control height */
        display: inline-flex; /* Use flexbox for centering content */
        align-items: center; /* Vertically center content */
        padding: 0.375rem 0.75rem; /* Bootstrap default button padding */
        font-size: 1rem; /* Bootstrap default button font size */
    }

    .btn-sm {
        height: calc(1.5em + 0.5rem + 2px); /* Adjusted height for small buttons */
        padding: 0.25rem 0.5rem; /* Bootstrap small button padding */
        font-size: 0.875rem; /* Bootstrap small button font size */
    }


    .btn-outline-secondary {
        color: var(--wood-dark);
        border-color: var(--wood-dark);
    }

        .btn-outline-secondary:hover {
            background-color: var(--wood-dark);
            color: white;
        }

    /* Style for the Description column text */
    .table td:nth-child(2) { /* This targets the second column (Description) */
        color: var(--black-text) !important; /* Use !important to override existing text-muted style */
    }

    /* Overall container spacing */
    .container-fluid.py-4 {
        padding-top: 1rem !important; /* Decreased padding top */
        padding-bottom: 1rem !important; /* Decreased padding bottom */
    }

    /* Align the checkbox properly with other form elements */
    .filter-controls .form-check {
        align-self: flex-end; /* Align checkbox to the bottom */
        padding-bottom: 0; /* Ensure no extra padding */
        margin-bottom: 0; /* Ensure no extra margin */
        padding-top: 0; /* Ensure no extra padding top */
        margin-top: 0; /* Ensure no extra margin top */
    }

    /* Further align the checkbox visually by adjusting its container's margin */
    .filter-group .form-check {
        margin-top: 0.375rem; /* Match the top margin of the select's filter-group */
    }

</style>

<div class="container-fluid py-4">
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0 text-white">Product Inventory</h5>
            <a asp-action="Create" class="btn btn-primary">
                <i class="fas fa-plus"></i> Add Product
            </a>
        </div>
        <div class="card-body">
            <div class="search-container">
                <form asp-action="Index" method="get">
                    <div class="search-row">
                        <div class="search-box">
                            <div class="input-group">
                                <input class="form-control" type="search"
                                       name="searchString" value="@filterModel.SearchString"
                                       placeholder="Search products..." />
                                <button class="btn btn-primary" type="submit">
                                    <i class="fas fa-search"></i> Search
                                </button>
                                <a asp-action="Index" class="btn btn-outline-secondary">
                                    <i class="fas fa-sync-alt"></i> Reset
                                </a>
                            </div>
                        </div>

                        <div class="filter-controls">
                            <div class="filter-group">
                                @* Removed the label for Category *@
                                <select name="categoryId" class="form-select" asp-items="ViewBag.Categories">
                                    <option value="">All Categories</option>
                                </select>
                            </div>

                            <div class="form-check filter-group">
                                <input class="form-check-input" type="checkbox"
                                       name="inStockOnly" id="inStockOnly"
                                @(filterModel.InStockOnly == true ? "checked" : "") value="true" />
                                <label class="form-check-label" for="inStockOnly">In Stock Only</label>
                            </div>
                        </div>
                    </div>
                </form>
            </div>

            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Description</th>
                            <th>Price</th>
                            <th>Stock</th>
                            <th>Category</th>
                            <th>Image</th>
                            <th class="action-buttons">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="fw-semibold">@Html.DisplayFor(modelItem => item.Name)</td>
                                <td class="text-muted">@Html.DisplayFor(modelItem => item.Description)</td>
                                <td>$@Html.DisplayFor(modelItem => item.Price)</td>
                                <td>
                                    @if (item.Quantity > 0)
                                    {
                                        <span class="status-badge badge-in-stock">In Stock (@item.Quantity)</span>
                                    }
                                    else
                                    {
                                        <span class="status-badge badge-out-of-stock">Out of Stock</span>
                                    }
                                </td>
                                <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.ImageUrl))
                                    {
                                        <img src="@item.ImageUrl" alt="Product Image" class="img-thumbnail" />
                                    }
                                    else
                                    {
                                        <span class="text-muted">No image</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="Edit" asp-route-id="@item.ProductId"
                                           class="btn btn-sm btn-primary" title="Edit">
                                            <i class="fas fa-edit"></i> Edit
                                        </a>
                                        <a asp-action="Details" asp-route-id="@item.ProductId"
                                           class="btn btn-sm btn-secondary" title="Details">
                                            <i class="fas fa-info-circle"></i> Details
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.ProductId"
                                           class="btn btn-sm btn-danger" title="Delete">
                                            <i class="fas fa-trash-alt"></i> Delete
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (totalPages > 1)
            {
                <nav aria-label="Product pagination" class="mt-4">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(filterModel.PageIndex == 1 ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-pageIndex="@(filterModel.PageIndex - 1)"
                               asp-route-searchString="@filterModel.SearchString"
                               asp-route-categoryId="@filterModel.CategoryId"
                               asp-route-inStockOnly="@filterModel.InStockOnly">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>

                        @for (int i = 1; i <= totalPages; i++)
                        {
                            <li class="page-item @(i == filterModel.PageIndex ? "active" : "")">
                                <a class="page-link"
                                   asp-action="Index"
                                   asp-route-pageIndex="@i"
                                   asp-route-searchString="@filterModel.SearchString"
                                   asp-route-categoryId="@filterModel.CategoryId"
                                   asp-route-inStockOnly="@filterModel.InStockOnly">
                                    @i
                                </a>
                            </li>
                        }

                        <li class="page-item @(filterModel.PageIndex == totalPages ? "disabled" : "")">
                            <a class="page-link"
                               asp-action="Index"
                               asp-route-pageIndex="@(filterModel.PageIndex + 1)"
                               asp-route-searchString="@filterModel.SearchString"
                               asp-route-categoryId="@filterModel.CategoryId"
                               asp-route-inStockOnly="@filterModel.InStockOnly">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>